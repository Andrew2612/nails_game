// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/game": {
            "post": {
                "description": "Создает новую игру между двумя игроками",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Создать новую игру",
                "parameters": [
                    {
                        "description": "Данные для создания игры",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateGameRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateGameResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/game/{gameId}": {
            "get": {
                "description": "Возвращает текущее состояние указанной игры",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Получить состояние игры",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID игры",
                        "name": "gameId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GameStateResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/game/{gameId}/move": {
            "post": {
                "description": "Выполняет ход в указанной игре",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Сделать ход",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID игры",
                        "name": "gameId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные хода",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.MoveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GameStateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Проверяет работоспособность сервера и базы данных",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "utils"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "Статус сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.CreateGameRequest": {
            "description": "Запрос на создание игры",
            "type": "object",
            "properties": {
                "firstPlayerId": {
                    "type": "string"
                },
                "line_size": {
                    "type": "integer"
                },
                "secondPlayerId": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateGameResponse": {
            "description": "Ответ с созданной игрой",
            "type": "object",
            "properties": {
                "firstPlayerId": {
                    "type": "string"
                },
                "gameId": {
                    "type": "string"
                },
                "lineSize": {
                    "type": "integer"
                },
                "secondPlayerId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dtos.GameStateResponse": {
            "description": "Состояние игры",
            "type": "object",
            "properties": {
                "currentPlayerId": {
                    "type": "string"
                },
                "gameId": {
                    "type": "string"
                },
                "line": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/enums.PositionState"
                    }
                },
                "moveCount": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dtos.MoveRequest": {
            "description": "Запрос на выполнение хода",
            "type": "object",
            "properties": {
                "playerId": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                }
            }
        },
        "enums.PositionState": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "Empty",
                "FirstPlayer",
                "SecondPlayer"
            ]
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Nails Game API",
	Description:      "API для игры в гвоздики",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
